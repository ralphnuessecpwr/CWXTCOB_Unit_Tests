<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 18.3.1.v20180327-2102_9?>
<!--Topaz for Total Test 18.3.1.v20180327-2102_9 05.04.2018 08:06:13-->
<archive:archive xmlns:archive="http://www.compuware.com/model/xml/archive" xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:interface="http://www.compuware.com/model/xml/interface" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:result="http://www.compuware.com/model/xml/result" xmlns:testcase="http://www.compuware.com/model/xml/testcase" xmlns:testscenario="http://www.compuware.com/model/xml/testscenario" xmlns:testsuite="http://www.compuware.com/model/xml/testsuite"><listructure:listructure id="Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><listructure:struct id="SALES_AMOUNT" name="SALES_AMOUNT"><properties:properties><properties:property name="storageLength" type="number">8</properties:property><properties:property name="displayLength" type="number">8</properties:property><properties:property name="platform" type="string">mainframe</properties:property></properties:properties><listructure:number id="SALES_AMOUNT.SALES_AMOUNT" length="8" name="SALES_AMOUNT"><properties:properties><properties:property name="picture" type="string">9(6)V99</properties:property><properties:property name="scale" type="number">2</properties:property><properties:property name="storageLength" type="number">8</properties:property><properties:property name="displayLength" type="number">8</properties:property><properties:property name="integerDigits" type="number">6</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">zoned</properties:property><properties:property name="mask" type="string">9(6)V99</properties:property></properties:properties></listructure:number></listructure:struct></listructure:listructure><listructure:listructure id="Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><listructure:struct id="COMM_TOTAL" name="COMM_TOTAL"><properties:properties><properties:property name="storageLength" type="number">4</properties:property><properties:property name="displayLength" type="number">4</properties:property><properties:property name="platform" type="string">mainframe</properties:property></properties:properties><listructure:number id="COMM_TOTAL.COMM_TOTAL" length="7" name="COMM_TOTAL"><properties:properties><properties:property name="picture" type="string">9(5)V99</properties:property><properties:property name="usage" type="string">computational-3</properties:property><properties:property name="scale" type="number">2</properties:property><properties:property name="storageLength" type="number">4</properties:property><properties:property name="displayLength" type="number">7</properties:property><properties:property name="integerDigits" type="number">5</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">packed</properties:property></properties:properties></listructure:number></listructure:struct></listructure:listructure><listructure:listructure id="Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><listructure:struct id="EMP_TYPE" name="EMP_TYPE"><properties:properties><properties:property name="storageLength" type="number">1</properties:property><properties:property name="displayLength" type="number">1</properties:property><properties:property name="platform" type="string">mainframe</properties:property></properties:properties><listructure:string id="EMP_TYPE.EMP_TYPE" length="1" name="EMP_TYPE"><properties:properties><properties:property name="picture" type="string">X</properties:property><properties:property name="storageLength" type="number">1</properties:property><properties:property name="displayLength" type="number">1</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">char</properties:property><properties:property name="mask" type="string">X</properties:property></properties:properties></listructure:string></listructure:struct></listructure:listructure><interface:interface alias="" id="Unit%20Test/Interfaces/CWXTSUBC.interface"><interface:description></interface:description><interface:argument listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><interface:baseTypeExtension baseType="#EMP_TYPE"><properties:properties><properties:property name="usage" type="string">in</properties:property></properties:properties></interface:baseTypeExtension><interface:baseTypeExtension baseType="#EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="usage" type="string">in</properties:property></properties:properties></interface:baseTypeExtension></interface:argument><interface:argument listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><interface:baseTypeExtension baseType="#SALES_AMOUNT"><properties:properties><properties:property name="usage" type="string">in</properties:property></properties:properties></interface:baseTypeExtension><interface:baseTypeExtension baseType="#SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="usage" type="string">in</properties:property></properties:properties></interface:baseTypeExtension></interface:argument><interface:argument listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><interface:baseTypeExtension baseType="#COMM_TOTAL"><properties:properties><properties:property name="usage" type="string">out</properties:property></properties:properties></interface:baseTypeExtension><interface:baseTypeExtension baseType="#COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="usage" type="string">out</properties:property></properties:properties></interface:baseTypeExtension></interface:argument></interface:interface><testscenario:testscenario alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario"><testscenario:description></testscenario:description><testscenario:testcases><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">0</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('0').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition><checkconditions:expectation></checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_1" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">1</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">1.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0.02</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('0.02').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">0.02</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_2" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">15000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">15000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">300.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('300').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">300</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_3" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">20000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">20000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">400.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('400').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">400</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_1" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">20001</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">20001.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">800.04</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('800.04').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">800.04</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_2" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">25000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">25000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">1000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('1000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">1000</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_3" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">40000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">40000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">1600.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('1600').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">1600</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_1" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">60001</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">60001.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">4800.08</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('4800.08').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">4800.08</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_2" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">75000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">75000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">6000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('6000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">6000</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_3" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">80000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">80000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">6400.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('6400').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">6400</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_1" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">100001</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">100001.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">15000.15</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">100001</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('15000.15').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">15000.15</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_2" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">250000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">250000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">37500.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">100001</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('37500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">37500.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_3" target="CWXTSUBC"><testcase:description></testcase:description><testcase:ddio>HPOGXM0.DEMO.DB1</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property><properties:property name="index" type="string">input.arg0.EMP_TYPE.EMP_TYPE</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">500000</properties:property><properties:property name="index" type="string">input.arg1.SALES_AMOUNT.SALES_AMOUNT</properties:property></properties:properties></testcase:data></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">0</properties:property><properties:property name="index" type="string">input.arg2.COMM_TOTAL.COMM_TOTAL</properties:property></properties:properties></testcase:data></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE.EMP_TYPE" id="output.arg0.EMP_TYPE.EMP_TYPE"><properties:properties><properties:property name="value" type="string">S</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT.SALES_AMOUNT" id="output.arg1.SALES_AMOUNT.SALES_AMOUNT"><properties:properties><properties:property name="value" type="number">500000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:output listructure="#Unit%20Test/Structures/CWXTSUBC_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL.COMM_TOTAL" id="output.arg2.COMM_TOTAL.COMM_TOTAL"><properties:properties><properties:property name="value" type="number">75000.00</properties:property></properties:properties></testcase:data></testcase:output><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expectation assert="noassert" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expectation assert="noassert" type="number">100001</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('75000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">75000</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase></testscenario:testcases></testscenario:testscenario><testsuite:testsuite alias="" id="Unit%20Test%5C.temp/CWXTSUBC_Sales.testsuite"><testsuite:description></testsuite:description><testsuite:testscenario>#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario</testsuite:testscenario></testsuite:testsuite><result:result><result:testsuite errorCount="0" failureCount="0" testCount="14" testsuite="#Unit%20Test%5C.temp/CWXTSUBC_Sales.testsuite"><result:testscenarios errorCount="0" failureCount="0" testCount="14" testscenario="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="2" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0"><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_1"><result:results expectedAssert="=" expectedValue="0.02" expression="BigDecimalCreator.make('0.02').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_2"><result:results expectedAssert="=" expectedValue="300" expression="BigDecimalCreator.make('300').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_02_3"><result:results expectedAssert="=" expectedValue="400" expression="BigDecimalCreator.make('400').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_1"><result:results expectedAssert="=" expectedValue="800.04" expression="BigDecimalCreator.make('800.04').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_2"><result:results expectedAssert="=" expectedValue="1000" expression="BigDecimalCreator.make('1000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_04_3"><result:results expectedAssert="=" expectedValue="1600" expression="BigDecimalCreator.make('1600').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_1"><result:results expectedAssert="=" expectedValue="4800.08" expression="BigDecimalCreator.make('4800.08').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_2"><result:results expectedAssert="=" expectedValue="6000" expression="BigDecimalCreator.make('6000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_08_3"><result:results expectedAssert="=" expectedValue="6400" expression="BigDecimalCreator.make('6400').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_1"><result:results expectedAssert="=" expectedValue="15000.15" expression="BigDecimalCreator.make('15000.15').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_2"><result:results expectedAssert="=" expectedValue="37500.00" expression="BigDecimalCreator.make('37500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="1" testcase="#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase0_09_3"><result:results expectedAssert="=" expectedValue="75000" expression="BigDecimalCreator.make('75000').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases></result:testscenarios></result:testsuite></result:result><properties:properties><properties:property name="archiveTimestamp" type="number">2018-04-05 08:06:13</properties:property><properties:property name="runnerDatabaseReset" type="boolean">false</properties:property><properties:property name="runnerRepeat" type="boolean">0</properties:property><properties:property name="runnerUseStubs" type="boolean">false</properties:property><properties:property name="SYSNAME" type="string">CWCC</properties:property><properties:property name="LPAR" type="string">CWCC</properties:property><properties:property name="USERID" type="string">HDDRXM0</properties:property><properties:property name="CPU" type="string">000CF3D72965</properties:property><properties:property name="MAINPGM" type="string">TTTRUNNR</properties:property><properties:property name="JOBNAME" type="string">HDDRXM0T</properties:property><properties:property name="JOBID" type="string">J0550338</properties:property><properties:property name="zBinaryBuilderVersion" type="string">TotalTest zBinaryBuilder v18.3.1.v20180327-2102_9 on 2018-04-05 08:06:13</properties:property><properties:property name="hexEncoding" type="string">1047</properties:property><properties:property name="zBinaryParserVersion" type="string">TotalTest zBinaryParser v18.3.1.v20180327-2102_9 on 2018-04-05 08:06:27</properties:property></properties:properties><archive:runnerOutput><archive:lines></archive:lines><archive:lines>***************** Output from TTTRUNNR *****************</archive:lines><archive:lines></archive:lines><archive:lines> STTR043I Initializing simulation environment for: COBOL V4</archive:lines><archive:lines> STTR043I Initializing simulation environment for: COBOL V5</archive:lines><archive:lines> STTR011I totaltest zTargetRunner v170200 on 2018-04-05 02:06.23��������������������������������������</archive:lines><archive:lines> STTR012I Options set to EXIT(),STUBS(OFF),REPEAT(0),ARGTYPE(��������)</archive:lines><archive:lines> STTR013I Processing test suite CWXTSUBC</archive:lines><archive:lines> STTR014I Processing test scenario CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case CWXTSUBC</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR028I Processing test case ��������</archive:lines><archive:lines> STTR006I Executing target CWXTSUBC</archive:lines><archive:lines> STTR008I All targets successfully executed</archive:lines><archive:lines></archive:lines><archive:lines>***************** Output from TTOUT *****************</archive:lines><archive:lines></archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines><archive:lines> ---BNDTARGT---entry</archive:lines><archive:lines> --->>>modName = CWXTSUBC, epName =</archive:lines><archive:lines> ---openW_includeName---entry</archive:lines><archive:lines> --->>>moduleName = CWXTSUBC</archive:lines><archive:lines>  openW: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines>  includeName: rc = 0, rs = &lt;0X00000000>.</archive:lines><archive:lines> ---openW_includeName---exit</archive:lines><archive:lines>  getE error: rc = 0, rs = &lt;0X83000705>.</archive:lines></archive:runnerOutput></archive:archive>